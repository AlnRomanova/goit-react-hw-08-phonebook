{"version":3,"file":"static/js/854.a7f96dc7.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  let visibleContacts = contacts;\n  if (filter.length > 0) {\n    visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n  return visibleContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"btn\":\"ContactForm_btn__wll+u\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport css from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleNameChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.some(e => e.name === name)) {\n      toast.info(`${name} is already in contacts 👇`);\n      return;\n    }\n    dispatch(addContact({name, number}));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handlerSubmit}>\n      <label htmlFor=\"\" className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"\" className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.btn}>Add contacts</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"contactsItem\":\"ContactList_contactsItem__x8C9b\",\"contactsDetails\":\"ContactList_contactsDetails__71j6L\",\"contactsBtn\":\"ContactList_contactsBtn__yx6OU\"};","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.contacts}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={css.contactsItem} key={id}>\n          <p className={css.contactsDetails}>{name}: {number}</p>\n          <button\n            className={css.contactsBtn}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsFilterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(filterContacts(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        onChange={changeFilter}\n        placeholder=\"give me keyword...\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { Skeleton } from '@chakra-ui/react';\n\n const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n    <ContactForm/>\n    <div>{isLoading && <Skeleton startColor='pink.500' endColor='orange.500' height='20px' />}\n    <ContactList/>\n    </div>\n    <Filter/>\n    </>\n\n  )\n}\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","filter","selectFilter","visibleContacts","length","contact","name","toLowerCase","includes","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleNameChange","e","target","value","className","css","onSubmit","preventDefault","some","toast","addContact","htmlFor","type","onChange","pattern","title","required","map","id","onClick","deleteContact","filterContacts","currentTarget","placeholder","useEffect","fetchContacts","startColor","endColor","height"],"sourceRoot":""}